//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RpcContractWcf.HelloService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HelloResult", Namespace="http://schemas.datacontract.org/2004/07/RpcProvider")]
    [System.SerializableAttribute()]
    public partial class HelloResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Head {
            get {
                return this.HeadField;
            }
            set {
                if ((object.ReferenceEquals(this.HeadField, value) != true)) {
                    this.HeadField = value;
                    this.RaisePropertyChanged("Head");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://RpcProvider", ConfigurationName="HelloService.IHelloServiceWcf")]
    public interface IHelloServiceWcf {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RpcProvider/IHelloServiceWcf/CallNameVoid", ReplyAction="http://RpcProvider/IHelloServiceWcf/CallNameVoidResponse")]
        string CallNameVoid();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RpcProvider/IHelloServiceWcf/CallNameVoid", ReplyAction="http://RpcProvider/IHelloServiceWcf/CallNameVoidResponse")]
        System.Threading.Tasks.Task<string> CallNameVoidAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RpcProvider/IHelloServiceWcf/CallName", ReplyAction="http://RpcProvider/IHelloServiceWcf/CallNameResponse")]
        void CallName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RpcProvider/IHelloServiceWcf/CallName", ReplyAction="http://RpcProvider/IHelloServiceWcf/CallNameResponse")]
        System.Threading.Tasks.Task CallNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RpcProvider/IHelloServiceWcf/CallVoid", ReplyAction="http://RpcProvider/IHelloServiceWcf/CallVoidResponse")]
        void CallVoid();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RpcProvider/IHelloServiceWcf/CallVoid", ReplyAction="http://RpcProvider/IHelloServiceWcf/CallVoidResponse")]
        System.Threading.Tasks.Task CallVoidAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RpcProvider/IHelloServiceWcf/Hello", ReplyAction="http://RpcProvider/IHelloServiceWcf/HelloResponse")]
        string Hello(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RpcProvider/IHelloServiceWcf/Hello", ReplyAction="http://RpcProvider/IHelloServiceWcf/HelloResponse")]
        System.Threading.Tasks.Task<string> HelloAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RpcProvider/IHelloServiceWcf/SayHello", ReplyAction="http://RpcProvider/IHelloServiceWcf/SayHelloResponse")]
        RpcContractWcf.HelloService.HelloResult SayHello(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RpcProvider/IHelloServiceWcf/SayHello", ReplyAction="http://RpcProvider/IHelloServiceWcf/SayHelloResponse")]
        System.Threading.Tasks.Task<RpcContractWcf.HelloService.HelloResult> SayHelloAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RpcProvider/IHelloServiceWcf/ShowHello", ReplyAction="http://RpcProvider/IHelloServiceWcf/ShowHelloResponse")]
        string ShowHello(RpcContractWcf.HelloService.HelloResult name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RpcProvider/IHelloServiceWcf/ShowHello", ReplyAction="http://RpcProvider/IHelloServiceWcf/ShowHelloResponse")]
        System.Threading.Tasks.Task<string> ShowHelloAsync(RpcContractWcf.HelloService.HelloResult name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHelloServiceWcfChannel : RpcContractWcf.HelloService.IHelloServiceWcf, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloServiceWcfClient : System.ServiceModel.ClientBase<RpcContractWcf.HelloService.IHelloServiceWcf>, RpcContractWcf.HelloService.IHelloServiceWcf {
        
        public HelloServiceWcfClient() {
        }
        
        public HelloServiceWcfClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HelloServiceWcfClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloServiceWcfClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloServiceWcfClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CallNameVoid() {
            return base.Channel.CallNameVoid();
        }
        
        public System.Threading.Tasks.Task<string> CallNameVoidAsync() {
            return base.Channel.CallNameVoidAsync();
        }
        
        public void CallName(string name) {
            base.Channel.CallName(name);
        }
        
        public System.Threading.Tasks.Task CallNameAsync(string name) {
            return base.Channel.CallNameAsync(name);
        }
        
        public void CallVoid() {
            base.Channel.CallVoid();
        }
        
        public System.Threading.Tasks.Task CallVoidAsync() {
            return base.Channel.CallVoidAsync();
        }
        
        public string Hello(string name) {
            return base.Channel.Hello(name);
        }
        
        public System.Threading.Tasks.Task<string> HelloAsync(string name) {
            return base.Channel.HelloAsync(name);
        }
        
        public RpcContractWcf.HelloService.HelloResult SayHello(string name) {
            return base.Channel.SayHello(name);
        }
        
        public System.Threading.Tasks.Task<RpcContractWcf.HelloService.HelloResult> SayHelloAsync(string name) {
            return base.Channel.SayHelloAsync(name);
        }
        
        public string ShowHello(RpcContractWcf.HelloService.HelloResult name) {
            return base.Channel.ShowHello(name);
        }
        
        public System.Threading.Tasks.Task<string> ShowHelloAsync(RpcContractWcf.HelloService.HelloResult name) {
            return base.Channel.ShowHelloAsync(name);
        }
    }
}
